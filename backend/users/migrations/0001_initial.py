# Generated by Django 3.2.19 on 2023-08-08 07:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models
import users.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(db_index=True, help_text='Введите имя пользователя', max_length=255, unique=True, validators=[users.validators.validate_username], verbose_name='Ник-нейм')),
                ('image', models.ImageField(blank=True, help_text='Загрузите изображение', upload_to='users/%Y/%m/%d', verbose_name='Изображение')),
                ('email', models.EmailField(help_text='Введите адрес электронной почты', max_length=255, unique=True, verbose_name='Адрес электронной почты')),
                ('first_name', models.CharField(help_text='Введите ваше имя', max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(help_text='Введите вашу фамилию', max_length=255, verbose_name='Фамилия')),
                ('second_name', models.CharField(help_text='Введите ваш отчество', max_length=255, verbose_name='Отчество')),
                ('birthday', models.DateField(help_text='Введите вашу дату рождения', verbose_name='Дата рождения')),
                ('password', models.CharField(help_text='Введите пароль', max_length=255, verbose_name='Пароль')),
                ('role', models.CharField(choices=[('user', 'Пользователь'), ('teamleader', 'Тимлид'), ('admin', 'Администратор')], default='user', max_length=10, verbose_name='Роль')),
                ('position', models.CharField(choices=[('junior', 'Junior'), ('middle', 'Middle'), ('senior', 'Senior')], default='junior', max_length=6, verbose_name='Уровень должности')),
                ('experience', models.IntegerField(default=1, verbose_name='Опыт работы')),
                ('contact', models.TextField(help_text='Введите список ваших доступных контактов', verbose_name='Контакты')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Является ли пользователь персоналом')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активен ли пользователь')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('username',),
            },
            managers=[
                ('objects', users.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название бонуса', max_length=255, verbose_name='Название')),
                ('bonus_points', models.IntegerField(verbose_name='Бонусные очки')),
                ('privilege', models.TextField(verbose_name='Привилегии')),
            ],
            options={
                'verbose_name': 'Бонус',
                'verbose_name_plural': 'Бонусы',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Backend', 'Backend'), ('Frontend', 'Frontend'), ('UX_UI', 'Ux Ui'), ('QA', 'Qa'), ('None', 'None')], default='None', max_length=10, verbose_name='Подразделение')),
                ('description', models.TextField(help_text='Добавьте описание подразделения', verbose_name='Описание')),
                ('image', models.ImageField(blank=True, help_text='Загрузите изображение', upload_to='users/department/%Y/%m/%d', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Подразделение',
                'verbose_name_plural': 'Подразделения',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название группы', max_length=255, verbose_name='Название')),
                ('description', models.TextField(help_text='Введите описание группы', verbose_name='Описание')),
                ('image', models.ImageField(blank=True, help_text='Загрузите изображение', upload_to='users/groups/%Y/%m/%d', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='UserRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kpi_name', models.CharField(max_length=255, verbose_name='Название KPI')),
                ('kpi_category', models.CharField(max_length=255, verbose_name='Категория KPI')),
                ('target', models.IntegerField(verbose_name='Целовой показатель KPI')),
                ('actual', models.IntegerField(verbose_name='Актуальный показатель KPI')),
                ('date', models.DateField(verbose_name='Дата выполнения задания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'KPI показатель',
                'verbose_name_plural': 'KPI показатели',
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата присоединения')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.group', verbose_name='Группа')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Участник группы')),
            ],
            options={
                'verbose_name': 'Сообщество',
                'verbose_name_plural': 'Сообщества',
                'ordering': ('group',),
            },
        ),
        migrations.AddField(
            model_name='user',
            name='bonus',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.bonus', verbose_name='Бонусы'),
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_department', to='users.department', verbose_name='Подразделение'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='users_groups', through='users.Membership', to='users.Group', verbose_name='Ингредиенты'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_rating',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rating', to='users.userrating', verbose_name='Рейтинг работника'),
        ),
        migrations.AddConstraint(
            model_name='membership',
            constraint=models.UniqueConstraint(fields=('user', 'group'), name='unique_group'),
        ),
    ]
